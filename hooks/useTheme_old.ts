import { useState, useEffect } from "react"
import type { Theme, ThemeClasses } from "@/types"

// 主题样式配置
const getThemeClasses = (theme: Theme): ThemeClasses => {
  if (theme === "dark") {
    return {
      background: "bg-gradient-to-br from-slate-900 via-blue-900 to-slate-800",
      text: "text-stone-200",
      secondaryText: "text-stone-400",
      card: "bg-slate-800/80 backdrop-blur-sm",
      cardBorder: "border-slate-700/50",
      cardHover: "hover:bg-slate-700/60 hover:border-slate-600/60",
      button: "bg-slate-700 hover:bg-slate-600 text-stone-200",
      buttonHover: "hover:bg-slate-600",
      input: "bg-slate-800 border-slate-600 text-stone-200",
      inputFocus: "focus:border-blue-400",
      badge: "bg-blue-900/50 border-blue-700/50",
      badgeText: "text-blue-200",
      accent: "text-blue-400",
      muted: "text-stone-500",
      overlay: "bg-black/50",
      adminBackground: "bg-slate-800/90",
      adminCard: "bg-slate-700/80",
      adminButton: "bg-slate-600 hover:bg-slate-500",
      adminButtonHover: "hover:bg-slate-500",
      adminText: "text-stone-200",
      adminSecondaryText: "text-stone-400",
      searchBackground: "bg-slate-800/50",
      searchBorder: "border-slate-600",
      searchText: "text-stone-200 placeholder-stone-400",
      categoryButton: "bg-slate-700/50 border-slate-600/50 text-stone-300",
      categoryButtonHover: "hover:bg-slate-600/60 hover:border-slate-500/60",
      categoryButtonActive: "bg-blue-800/60 border-blue-600/60 text-blue-200",
      categoryButtonText: "text-stone-300",
      recommendedCard: "bg-gradient-to-br from-blue-900/40 to-purple-900/40 border-blue-700/30",
      recommendedCardBorder: "border-blue-700/30",
      recommendedBadge: "bg-gradient-to-r from-blue-600 to-purple-600",
      recommendedBadgeText: "text-white",
      websiteCard: "bg-slate-800/60 border-slate-700/40",
      websiteCardBorder: "border-slate-700/40",
      websiteCardHover: "hover:bg-slate-700/50 hover:border-slate-600/50",
      iconColor: "text-stone-200",
      deleteButton: "bg-red-700 hover:bg-red-600 text-white",
      deleteButtonHover: "hover:bg-red-600",
      editButton: "bg-blue-700 hover:bg-blue-600 text-white",
      editButtonHover: "hover:bg-blue-600",
      saveButton: "bg-green-700 hover:bg-green-600 text-white",
      saveButtonHover: "hover:bg-green-600",
      cancelButton: "bg-gray-600 hover:bg-gray-500 text-white",
      cancelButtonHover: "hover:bg-gray-500",
      addButton: "bg-emerald-700 hover:bg-emerald-600 text-white",
      addButtonHover: "hover:bg-emerald-600",
      themeButton: "bg-amber-700 hover:bg-amber-600 text-white",
      themeButtonHover: "hover:bg-amber-600",
      loginButton: "bg-purple-700 hover:bg-purple-600 text-white",
      loginButtonHover: "hover:bg-purple-600",
      logoutButton: "bg-red-700 hover:bg-red-600 text-white",
      logoutButtonHover: "hover:bg-red-600",
      clearButton: "bg-orange-700 hover:bg-orange-600 text-white",
      clearButtonHover: "hover:bg-orange-600",
      refreshButton: "bg-teal-700 hover:bg-teal-600 text-white",
      refreshButtonHover: "hover:bg-teal-600",
      toggleButton: "bg-indigo-700 hover:bg-indigo-600 text-white",
      toggleButtonHover: "hover:bg-indigo-600",
      dialogBackground: "bg-slate-900 border-slate-700",
      dialogBorder: "border-slate-700",
      dialogText: "text-stone-200",
      dialogSecondaryText: "text-stone-400",
      tabsBackground: "bg-slate-800",
      tabsText: "text-stone-400",
      tabsActiveText: "text-stone-200",
      tabsActiveBorder: "border-blue-400",
      radioBackground: "bg-slate-800 border-slate-600",
      radioText: "text-stone-200",
      radioChecked: "border-blue-400 bg-blue-400",
      checkboxBackground: "bg-slate-800 border-slate-600",
      checkboxText: "text-stone-200",
      checkboxChecked: "border-blue-400 bg-blue-400",
      selectBackground: "bg-slate-800 border-slate-600",
      selectText: "text-stone-200",
      selectBorder: "border-slate-600",
      textareaBackground: "bg-slate-800 border-slate-600",
      textareaText: "text-stone-200",
      textareaBorder: "border-slate-600",
      labelText: "text-stone-300",
      errorText: "text-red-400",
      successText: "text-green-400",
      warningText: "text-yellow-400",
      infoText: "text-blue-400",
      linkText: "text-blue-400",
      linkHover: "hover:text-blue-300",
      separatorColor: "bg-slate-600",
      scrollbarTrack: "bg-slate-800",
      scrollbarThumb: "bg-slate-600",
      scrollbarThumbHover: "hover:bg-slate-500",
      loadingSpinner: "text-blue-400",
      loadingText: "text-stone-400",
      emptyStateText: "text-stone-500",
      placeholderText: "text-stone-500",
      tooltipBackground: "bg-slate-800 border-slate-600",
      tooltipText: "text-stone-200",
      tooltipBorder: "border-slate-600",
      modalOverlay: "bg-black/80",
      modalBackground: "bg-slate-900 border-slate-700",
      modalBorder: "border-slate-700",
      modalText: "text-stone-200",
      modalSecondaryText: "text-stone-400",
      progressBackground: "bg-slate-700",
      progressFill: "bg-blue-500",
      avatarBackground: "bg-slate-700",
      avatarText: "text-stone-200",
      avatarBorder: "border-slate-600",
      codeBackground: "bg-slate-800 border-slate-600",
      codeText: "text-stone-200",
      codeBorder: "border-slate-600",
      preBackground: "bg-slate-800 border-slate-600",
      preText: "text-stone-200",
      preBorder: "border-slate-600",
      blockquoteBackground: "bg-slate-800 border-slate-600",
      blockquoteText: "text-stone-300",
      blockquoteBorder: "border-slate-600",
      tableBackground: "bg-slate-800",
      tableText: "text-stone-200",
      tableBorder: "border-slate-600",
      tableHeaderBackground: "bg-slate-700",
      tableHeaderText: "text-stone-200",
      tableRowHover: "hover:bg-slate-700",
      tableRowText: "text-stone-200",
      navBackground: "bg-slate-900 border-slate-700",
      navText: "text-stone-200",
      navBorder: "border-slate-700",
      navLinkText: "text-stone-300",
      navLinkHover: "hover:text-stone-200",
      navLinkActive: "text-blue-400",
      sidebarBackground: "bg-slate-900 border-slate-700",
      sidebarText: "text-stone-200",
      sidebarBorder: "border-slate-700",
      sidebarLinkText: "text-stone-300",
      sidebarLinkHover: "hover:text-stone-200",
      sidebarLinkActive: "text-blue-400",
      headerBackground: "bg-slate-900 border-slate-700",
      headerText: "text-stone-200",
      headerBorder: "border-slate-700",
      footerBackground: "bg-slate-900 border-slate-700",
      footerText: "text-stone-200",
      footerBorder: "border-slate-700",
      breadcrumbText: "text-stone-300",
      breadcrumbSeparator: "text-stone-500",
      breadcrumbActive: "text-stone-200",
      paginationBackground: "bg-slate-800 border-slate-600",
      paginationText: "text-stone-200",
      paginationBorder: "border-slate-600",
      paginationHover: "hover:bg-slate-700",
      paginationActive: "bg-blue-700 text-white",
      paginationDisabled: "text-stone-500",
      dropdownBackground: "bg-slate-800 border-slate-600",
      dropdownText: "text-stone-200",
      dropdownBorder: "border-slate-600",
      dropdownItemHover: "hover:bg-slate-700",
      dropdownItemActive: "bg-blue-700 text-white",
      contextMenuBackground: "bg-slate-800 border-slate-600",
      contextMenuText: "text-stone-200",
      contextMenuBorder: "border-slate-600",
      contextMenuItemHover: "hover:bg-slate-700",
      contextMenuItemActive: "bg-blue-700 text-white",
      toastBackground: "bg-slate-800 border-slate-600",
      toastText: "text-stone-200",
      toastBorder: "border-slate-600",
      toastSuccessBackground: "bg-green-800 border-green-600",
      toastSuccessText: "text-green-200",
      toastSuccessBorder: "border-green-600",
      toastErrorBackground: "bg-red-800 border-red-600",
      toastErrorText: "text-red-200",
      toastErrorBorder: "border-red-600",
      toastWarningBackground: "bg-yellow-800 border-yellow-600",
      toastWarningText: "text-yellow-200",
      toastWarningBorder: "border-yellow-600",
      toastInfoBackground: "bg-blue-800 border-blue-600",
      toastInfoText: "text-blue-200",
      toastInfoBorder: "border-blue-600",
      calendarBackground: "bg-slate-800 border-slate-600",
      calendarText: "text-stone-200",
      calendarBorder: "border-slate-600",
      calendarHeaderBackground: "bg-slate-700",
      calendarHeaderText: "text-stone-200",
      calendarDayHover: "hover:bg-slate-700",
      calendarDaySelected: "bg-blue-700 text-white",
      calendarDayToday: "bg-blue-800 text-blue-200",
      calendarDayDisabled: "text-stone-500",
      chartBackground: "bg-slate-800 border-slate-600",
      chartText: "text-stone-200",
      chartBorder: "border-slate-600",
      chartLine: "stroke-blue-400",
      chartFill: "fill-blue-500",
      chartGrid: "stroke-slate-600",
      chartTooltipBackground: "bg-slate-800 border-slate-600",
      chartTooltipText: "text-stone-200",
      chartTooltipBorder: "border-slate-600"
    }
  } else {
    // 浅色主题
    return {
      background: "bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50",
      text: "text-slate-800",
      secondaryText: "text-slate-600",
      card: "bg-white/80 backdrop-blur-sm",
      cardBorder: "border-slate-200/50",
      cardHover: "hover:bg-slate-50/80 hover:border-slate-300/60",
      button: "bg-slate-200 hover:bg-slate-300 text-slate-800",
      buttonHover: "hover:bg-slate-300",
      input: "bg-white border-slate-300 text-slate-800",
      inputFocus: "focus:border-blue-500",
      badge: "bg-blue-100/50 border-blue-300/50",
      badgeText: "text-blue-800",
      accent: "text-blue-600",
      muted: "text-slate-500",
      overlay: "bg-black/20",
      adminBackground: "bg-white/90",
      adminCard: "bg-slate-50/80",
      adminButton: "bg-slate-300 hover:bg-slate-400",
      adminButtonHover: "hover:bg-slate-400",
      adminText: "text-slate-800",
      adminSecondaryText: "text-slate-600",
      searchBackground: "bg-white/50",
      searchBorder: "border-slate-300",
      searchText: "text-slate-800 placeholder-slate-500",
      categoryButton: "bg-slate-100/50 border-slate-300/50 text-slate-700",
      categoryButtonHover: "hover:bg-slate-200/60 hover:border-slate-400/60",
      categoryButtonActive: "bg-blue-200/60 border-blue-400/60 text-blue-800",
      categoryButtonText: "text-slate-700",
      recommendedCard: "bg-gradient-to-br from-blue-100/40 to-purple-100/40 border-blue-300/30",
      recommendedCardBorder: "border-blue-300/30",
      recommendedBadge: "bg-gradient-to-r from-blue-500 to-purple-500",
      recommendedBadgeText: "text-white",
      websiteCard: "bg-white/60 border-slate-200/40",
      websiteCardBorder: "border-slate-200/40",
      websiteCardHover: "hover:bg-slate-50/50 hover:border-slate-300/50",
      iconColor: "text-slate-800",
      deleteButton: "bg-red-500 hover:bg-red-600 text-white",
      deleteButtonHover: "hover:bg-red-600",
      editButton: "bg-blue-500 hover:bg-blue-600 text-white",
      editButtonHover: "hover:bg-blue-600",
      saveButton: "bg-green-500 hover:bg-green-600 text-white",
      saveButtonHover: "hover:bg-green-600",
      cancelButton: "bg-gray-400 hover:bg-gray-500 text-white",
      cancelButtonHover: "hover:bg-gray-500",
      addButton: "bg-emerald-500 hover:bg-emerald-600 text-white",
      addButtonHover: "hover:bg-emerald-600",
      themeButton: "bg-amber-500 hover:bg-amber-600 text-white",
      themeButtonHover: "hover:bg-amber-600",
      loginButton: "bg-purple-500 hover:bg-purple-600 text-white",
      loginButtonHover: "hover:bg-purple-600",
      logoutButton: "bg-red-500 hover:bg-red-600 text-white",
      logoutButtonHover: "hover:bg-red-600",
      clearButton: "bg-orange-500 hover:bg-orange-600 text-white",
      clearButtonHover: "hover:bg-orange-600",
      refreshButton: "bg-teal-500 hover:bg-teal-600 text-white",
      refreshButtonHover: "hover:bg-teal-600",
      toggleButton: "bg-indigo-500 hover:bg-indigo-600 text-white",
      toggleButtonHover: "hover:bg-indigo-600",
      dialogBackground: "bg-white border-slate-300",
      dialogBorder: "border-slate-300",
      dialogText: "text-slate-800",
      dialogSecondaryText: "text-slate-600",
      tabsBackground: "bg-slate-100",
      tabsText: "text-slate-600",
      tabsActiveText: "text-slate-800",
      tabsActiveBorder: "border-blue-500",
      radioBackground: "bg-white border-slate-300",
      radioText: "text-slate-800",
      radioChecked: "border-blue-500 bg-blue-500",
      checkboxBackground: "bg-white border-slate-300",
      checkboxText: "text-slate-800",
      checkboxChecked: "border-blue-500 bg-blue-500",
      selectBackground: "bg-white border-slate-300",
      selectText: "text-slate-800",
      selectBorder: "border-slate-300",
      textareaBackground: "bg-white border-slate-300",
      textareaText: "text-slate-800",
      textareaBorder: "border-slate-300",
      labelText: "text-slate-700",
      errorText: "text-red-600",
      successText: "text-green-600",
      warningText: "text-yellow-600",
      infoText: "text-blue-600",
      linkText: "text-blue-600",
      linkHover: "hover:text-blue-700",
      separatorColor: "bg-slate-300",
      scrollbarTrack: "bg-slate-100",
      scrollbarThumb: "bg-slate-400",
      scrollbarThumbHover: "hover:bg-slate-500",
      loadingSpinner: "text-blue-600",
      loadingText: "text-slate-600",
      emptyStateText: "text-slate-500",
      placeholderText: "text-slate-500",
      tooltipBackground: "bg-white border-slate-300",
      tooltipText: "text-slate-800",
      tooltipBorder: "border-slate-300",
      modalOverlay: "bg-black/40",
      modalBackground: "bg-white border-slate-300",
      modalBorder: "border-slate-300",
      modalText: "text-slate-800",
      modalSecondaryText: "text-slate-600",
      progressBackground: "bg-slate-200",
      progressFill: "bg-blue-500",
      avatarBackground: "bg-slate-200",
      avatarText: "text-slate-800",
      avatarBorder: "border-slate-300",
      codeBackground: "bg-slate-100 border-slate-300",
      codeText: "text-slate-800",
      codeBorder: "border-slate-300",
      preBackground: "bg-slate-100 border-slate-300",
      preText: "text-slate-800",
      preBorder: "border-slate-300",
      blockquoteBackground: "bg-slate-100 border-slate-300",
      blockquoteText: "text-slate-700",
      blockquoteBorder: "border-slate-300",
      tableBackground: "bg-white",
      tableText: "text-slate-800",
      tableBorder: "border-slate-300",
      tableHeaderBackground: "bg-slate-100",
      tableHeaderText: "text-slate-800",
      tableRowHover: "hover:bg-slate-50",
      tableRowText: "text-slate-800",
      navBackground: "bg-white border-slate-300",
      navText: "text-slate-800",
      navBorder: "border-slate-300",
      navLinkText: "text-slate-700",
      navLinkHover: "hover:text-slate-800",
      navLinkActive: "text-blue-600",
      sidebarBackground: "bg-white border-slate-300",
      sidebarText: "text-slate-800",
      sidebarBorder: "border-slate-300",
      sidebarLinkText: "text-slate-700",
      sidebarLinkHover: "hover:text-slate-800",
      sidebarLinkActive: "text-blue-600",
      headerBackground: "bg-white border-slate-300",
      headerText: "text-slate-800",
      headerBorder: "border-slate-300",
      footerBackground: "bg-white border-slate-300",
      footerText: "text-slate-800",
      footerBorder: "border-slate-300",
      breadcrumbText: "text-slate-700",
      breadcrumbSeparator: "text-slate-500",
      breadcrumbActive: "text-slate-800",
      paginationBackground: "bg-white border-slate-300",
      paginationText: "text-slate-800",
      paginationBorder: "border-slate-300",
      paginationHover: "hover:bg-slate-50",
      paginationActive: "bg-blue-500 text-white",
      paginationDisabled: "text-slate-400",
      dropdownBackground: "bg-white border-slate-300",
      dropdownText: "text-slate-800",
      dropdownBorder: "border-slate-300",
      dropdownItemHover: "hover:bg-slate-50",
      dropdownItemActive: "bg-blue-500 text-white",
      contextMenuBackground: "bg-white border-slate-300",
      contextMenuText: "text-slate-800",
      contextMenuBorder: "border-slate-300",
      contextMenuItemHover: "hover:bg-slate-50",
      contextMenuItemActive: "bg-blue-500 text-white",
      toastBackground: "bg-white border-slate-300",
      toastText: "text-slate-800",
      toastBorder: "border-slate-300",
      toastSuccessBackground: "bg-green-100 border-green-300",
      toastSuccessText: "text-green-800",
      toastSuccessBorder: "border-green-300",
      toastErrorBackground: "bg-red-100 border-red-300",
      toastErrorText: "text-red-800",
      toastErrorBorder: "border-red-300",
      toastWarningBackground: "bg-yellow-100 border-yellow-300",
      toastWarningText: "text-yellow-800",
      toastWarningBorder: "border-yellow-300",
      toastInfoBackground: "bg-blue-100 border-blue-300",
      toastInfoText: "text-blue-800",
      toastInfoBorder: "border-blue-300",
      calendarBackground: "bg-white border-slate-300",
      calendarText: "text-slate-800",
      calendarBorder: "border-slate-300",
      calendarHeaderBackground: "bg-slate-100",
      calendarHeaderText: "text-slate-800",
      calendarDayHover: "hover:bg-slate-50",
      calendarDaySelected: "bg-blue-500 text-white",
      calendarDayToday: "bg-blue-100 text-blue-800",
      calendarDayDisabled: "text-slate-400",
      chartBackground: "bg-white border-slate-300",
      chartText: "text-slate-800",
      chartBorder: "border-slate-300",
      chartLine: "stroke-blue-500",
      chartFill: "fill-blue-500",
      chartGrid: "stroke-slate-300",
      chartTooltipBackground: "bg-white border-slate-300",
      chartTooltipText: "text-slate-800",
      chartTooltipBorder: "border-slate-300"
    }
  }
}

// 主题Hook
export function useTheme() {
  const [theme, setTheme] = useState<Theme>("light")
  const [themeClasses, setThemeClasses] = useState<ThemeClasses>(getThemeClasses("light"))

  useEffect(() => {
    // 从localStorage读取主题设置
    const savedTheme = localStorage.getItem("theme") as Theme | null
    if (savedTheme) {
      setTheme(savedTheme)
      setThemeClasses(getThemeClasses(savedTheme))
    }
  }, [])

  const toggleTheme = () => {
    const newTheme = theme === "light" ? "dark" : "light"
    setTheme(newTheme)
    setThemeClasses(getThemeClasses(newTheme))
    localStorage.setItem("theme", newTheme)
  }

  return {
    theme,
    themeClasses,
    toggleTheme
  }
} 